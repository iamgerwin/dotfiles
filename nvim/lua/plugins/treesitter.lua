return {
  "nvim-treesitter/nvim-treesitter",
  build = ":TSUpdate",
  event = { "BufReadPre", "BufNewFile" },
  dependencies = {
    "nvim-treesitter/nvim-treesitter-textobjects",
  },
  config = function()
    require("nvim-treesitter.configs").setup({
      ensure_installed = {
        "lua",
        "vim",
        "vimdoc",
        "javascript",
        "typescript",
        "tsx",
        "json",
        "jsonc",
        "html",
        "css",
        "scss",
        "python",
        "rust",
        "go",
        "yaml",
        "toml",
        "markdown",
        "markdown_inline",
        "bash",
        "regex",
        "dockerfile",
        "git_config",
        "gitignore",
        "git_rebase",
        "gitcommit",
        "gitattributes",
      },
      auto_install = true,
      highlight = {
        enable = true,
        additional_vim_regex_highlighting = false,
      },
      indent = {
        enable = true,
      },
      incremental_selection = {
        enable = true,
        keymaps = {
          init_selection = "<C-space>",
          node_incremental = "<C-space>",
          scope_incremental = "<C-s>",
          node_decremental = "<C-backspace>",
        },
      },
      textobjects = {
        select = {
          enable = true,
          lookahead = true,
          keymaps = {
            ["af"] = "@function.outer",
            ["if"] = "@function.inner",
            ["ac"] = "@class.outer",
            ["ic"] = "@class.inner",
            ["as"] = "@statement.outer",
            ["is"] = "@statement.inner",
            ["al"] = "@loop.outer",
            ["il"] = "@loop.inner",
            ["at"] = "@comment.outer",
            ["it"] = "@comment.inner",
            ["ab"] = "@block.outer",
            ["ib"] = "@block.inner",
          },
        },
        move = {
          enable = true,
          set_jumps = true,
          goto_next_start = {
            ["]f"] = "@function.outer",
            ["]c"] = "@class.outer",
            ["]s"] = "@statement.outer",
            ["]l"] = "@loop.outer",
            ["]t"] = "@comment.outer",
            ["]b"] = "@block.outer",
          },
          goto_next_end = {
            ["]F"] = "@function.outer",
            ["]C"] = "@class.outer",
            ["]S"] = "@statement.outer",
            ["]L"] = "@loop.outer",
            ["]T"] = "@comment.outer",
            ["]B"] = "@block.outer",
          },
          goto_previous_start = {
            ["[f"] = "@function.outer",
            ["[c"] = "@class.outer",
            ["[s"] = "@statement.outer",
            ["[l"] = "@loop.outer",
            ["[t"] = "@comment.outer",
            ["[b"] = "@block.outer",
          },
          goto_previous_end = {
            ["[F"] = "@function.outer",
            ["[C"] = "@class.outer",
            ["[S"] = "@statement.outer",
            ["[L"] = "@loop.outer",
            ["[T"] = "@comment.outer",
            ["[B"] = "@block.outer",
          },
        },
      },
    })
  end,
}